Index: src/main/java/com/social/Main.java
===================================================================
diff --git a/src/main/java/com/social/Main.java b/src/main/java/com/social/Main.java
deleted file mode 100644
--- a/src/main/java/com/social/Main.java	(revision 0a118ab7f81210210b55f11efa7898cdebe3c7df)
+++ /dev/null	(revision 0a118ab7f81210210b55f11efa7898cdebe3c7df)
@@ -1,7 +0,0 @@
-package com.social;
-
-public class Main {
-    public static void main(String[] args) {
-        System.out.println("Hello world!");
-    }
-}
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\n    id 'java'\n}\n\ngroup = 'com.social'\nversion = '1.0-SNAPSHOT'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testImplementation platform('org.junit:junit-bom:5.9.1')\n    testImplementation 'org.junit.jupiter:junit-jupiter'\n}\n\ntest {\n    useJUnitPlatform()\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 0a118ab7f81210210b55f11efa7898cdebe3c7df)
+++ b/build.gradle	(date 1692276851119)
@@ -1,19 +1,75 @@
 plugins {
     id 'java'
+    id 'jacoco'
+    id 'org.springframework.boot' version '2.7.0'
+    id 'io.spring.dependency-management' version '1.1.0'
 }
 
 group = 'com.social'
 version = '1.0-SNAPSHOT'
 
+sourceCompatibility = 11
+targetCompatibility = 11
+
 repositories {
     mavenCentral()
 }
 
+configurations {
+    compileOnly {
+        extendsFrom annotationProcessor
+    }
+    all {
+        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
+        exclude group: 'ch.qos.logback'
+    }
+}
+
 dependencies {
-    testImplementation platform('org.junit:junit-bom:5.9.1')
-    testImplementation 'org.junit.jupiter:junit-jupiter'
+    compileOnly 'org.projectlombok:lombok:1.18.24'
+    annotationProcessor 'org.projectlombok:lombok:1.18.24'
+
+    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.6.8'
+    implementation 'org.springframework.boot:spring-boot-starter-log4j2:2.7.0'
+    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.0'
+    implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.0'
+    implementation 'org.springframework.boot:spring-boot-starter-amqp:2.7.0'
+    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.7.0'
+    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.0'
+    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.0'
+    implementation 'org.springframework.boot:spring-boot-starter-security:2.7.0'
+    implementation 'org.springframework.boot:spring-boot-starter-cache:2.7.0'
+    implementation 'org.springframework.security:spring-security-oauth2-client'
+
+    implementation 'org.hibernate:hibernate-spatial:5.6.9.Final'
+    implementation 'org.postgresql:postgresql:42.6.0'
+
+    implementation 'commons-io:commons-io:2.11.0'
+    implementation 'org.apache.commons:commons-lang3:3.12.0'
+
+    implementation 'io.swagger.core.v3:swagger-core:2.2.2'
+    implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'
+    implementation 'io.jsonwebtoken:jjwt:0.9.1'
+
+    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.0'
+    testImplementation 'org.testcontainers:postgresql:1.17.6'
+    testImplementation "org.testcontainers:junit-jupiter:1.17.6"
+
+    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.0.Final'
+
 }
+
+compileJava.options.encoding = 'UTF-8'
 
 test {
     useJUnitPlatform()
+    include '**/*Test.class'
+}
+
+jacocoTestReport {
+    reports {
+        xml.required = false
+        csv.required = false
+        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
+    }
 }
\ No newline at end of file
